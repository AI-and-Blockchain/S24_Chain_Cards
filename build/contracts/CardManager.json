{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "subscriptionId",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "OnlyCoordinatorCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "RequestFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "numWords",
          "type": "uint32"
        }
      ],
      "name": "RequestSent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRequestId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "rawFulfillRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestRandomWords",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_requests",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fulfilled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "1": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
    "2": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "3": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
    "4": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol",
    "5": "contracts/contracts/CardManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/CardManager.sol",
    "exportedSymbols": {
      "CardManager": [
        203
      ],
      "ConfirmedOwner": [
        224
      ],
      "VRFConsumerBaseV2": [
        282
      ],
      "VRFCoordinatorV2Interface": [
        378
      ]
    },
    "id": 204,
    "license": "Apache",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:24:5"
      },
      {
        "absolutePath": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol",
        "file": "smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 379,
        "src": "60:139:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "VRFCoordinatorV2Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 378,
              "src": "68:25:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
        "file": "smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 283,
        "src": "200:112:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "VRFConsumerBaseV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 282,
              "src": "208:17:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dante/.brownie/packages/smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        "file": "smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 225,
        "src": "313:116:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "ConfirmedOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 224,
              "src": "321:14:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "VRFConsumerBaseV2",
              "nameLocations": [
                "455:17:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 282,
              "src": "455:17:5"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "455:17:5"
          },
          {
            "baseName": {
              "id": 10,
              "name": "ConfirmedOwner",
              "nameLocations": [
                "474:14:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 224,
              "src": "474:14:5"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "474:14:5"
          }
        ],
        "canonicalName": "CardManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 203,
        "linearizedBaseContracts": [
          203,
          224,
          541,
          557,
          282
        ],
        "name": "CardManager",
        "nameLocation": "440:11:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "cc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee",
            "id": 17,
            "name": "RequestSent",
            "nameLocation": "499:11:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "519:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "511:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numWords",
                  "nameLocation": "537:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "530:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:36:5"
            },
            "src": "493:54:5"
          },
          {
            "anonymous": false,
            "eventSelector": "fe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d",
            "id": 24,
            "name": "RequestFulfilled",
            "nameLocation": "558:16:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "583:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "575:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "randomWords",
                  "nameLocation": "604:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "594:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "594:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21,
                    "nodeType": "ArrayTypeName",
                    "src": "594:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "574:42:5"
            },
            "src": "552:65:5"
          },
          {
            "canonicalName": "CardManager.RequestStatus",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "fulfilled",
                "nameLocation": "659:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "654:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "654:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "738:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "733:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 27,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "733:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "randomWords",
                "nameLocation": "794:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "784:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30,
                  "nodeType": "ArrayTypeName",
                  "src": "784:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RequestStatus",
            "nameLocation": "630:13:5",
            "nodeType": "StructDefinition",
            "scope": 203,
            "src": "623:189:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a168fa89",
            "id": 37,
            "mutability": "mutable",
            "name": "s_requests",
            "nameLocation": "866:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "817:59:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
              "typeString": "mapping(uint256 => struct CardManager.RequestStatus)"
            },
            "typeName": {
              "id": 36,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "825:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "817:33:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                "typeString": "mapping(uint256 => struct CardManager.RequestStatus)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 35,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 34,
                  "name": "RequestStatus",
                  "nameLocations": [
                    "836:13:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "836:13:5"
                },
                "referencedDeclaration": 32,
                "src": "836:13:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RequestStatus_$32_storage_ptr",
                  "typeString": "struct CardManager.RequestStatus"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "COORDINATOR",
            "nameLocation": "942:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "916:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
              "typeString": "contract VRFCoordinatorV2Interface"
            },
            "typeName": {
              "id": 39,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38,
                "name": "VRFCoordinatorV2Interface",
                "nameLocations": [
                  "916:25:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 378,
                "src": "916:25:5"
              },
              "referencedDeclaration": 378,
              "src": "916:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
                "typeString": "contract VRFCoordinatorV2Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "s_subscriptionId",
            "nameLocation": "996:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "989:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 41,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "989:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8796ba8c",
            "id": 45,
            "mutability": "mutable",
            "name": "requestIds",
            "nameLocation": "1061:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1044:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1044:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1044:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc2a88c3",
            "id": 47,
            "mutability": "mutable",
            "name": "lastRequestId",
            "nameLocation": "1092:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1077:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1077:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "1351:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1343:92:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1343:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834373465333461303737646635383830376462653963393664336330303962323362336336643063636534333365353962626635623334663832336263353663",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1369:66:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32252389537490169210361953760373331040174451679212745185074627906471143916908_by_1",
                "typeString": "int_const 3225...(69 digits omitted)...6908"
              },
              "value": "0x474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "callbackGasLimit",
            "nameLocation": "1859:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1852:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 51,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1852:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1878:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "requestConfirmations",
            "nameLocation": "1952:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "1945:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 54,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1945:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1975:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "numWords",
            "nameLocation": "2109:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "2102:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 57,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2102:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 58,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2120:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "2394:165:5",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "COORDINATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2404:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838313033423041384130306265324444433737386536653765616132313739314364333634363235",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2457:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73,
                        "name": "VRFCoordinatorV2Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "2418:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$378_$",
                          "typeString": "type(contract VRFCoordinatorV2Interface)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2418:91:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "src": "2404:105:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
                      "typeString": "contract VRFCoordinatorV2Interface"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:105:5"
                },
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "s_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2519:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2538:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2519:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:33:5"
                }
              ]
            },
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "2128:103:5",
              "text": " HARDCODED FOR SEPOLIA\n COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"
            },
            "id": 83,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "307838313033423041384130306265324444433737386536653765616132313739314364333634363235",
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2311:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"
                  }
                ],
                "id": 66,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 64,
                  "name": "VRFConsumerBaseV2",
                  "nameLocations": [
                    "2293:17:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 282,
                  "src": "2293:17:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2293:61:5"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 68,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2378:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2382:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2378:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 70,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 67,
                  "name": "ConfirmedOwner",
                  "nameLocations": [
                    "2363:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 224,
                  "src": "2363:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2363:26:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "subscriptionId",
                  "nameLocation": "2264:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2257:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:37:5"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:0:5"
            },
            "scope": 203,
            "src": "2236:323:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2726:570:5",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2798:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 93,
                          "name": "keyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "2854:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 94,
                          "name": "s_subscriptionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2875:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 95,
                          "name": "requestConfirmations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "2905:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 96,
                          "name": "callbackGasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2939:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 97,
                          "name": "numWords",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "2969:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 91,
                          "name": "COORDINATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "2810:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$378",
                            "typeString": "contract VRFCoordinatorV2Interface"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2822:18:5",
                        "memberName": "requestRandomWords",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 311,
                        "src": "2810:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
                          "typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2810:177:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2798:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "2798:189:5"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101,
                        "name": "s_requests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "2997:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                          "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "id": 102,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3008:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2997:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                        "typeString": "struct CardManager.RequestStatus storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3076:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3062:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 105,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3066:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 106,
                              "nodeType": "ArrayTypeName",
                              "src": "3066:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3062:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3100:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3129:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 104,
                        "name": "RequestStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3021:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RequestStatus_$32_storage_ptr_$",
                          "typeString": "type(struct CardManager.RequestStatus storage pointer)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3049:11:5",
                        "3092:6:5",
                        "3118:9:5"
                      ],
                      "names": [
                        "randomWords",
                        "exists",
                        "fulfilled"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3021:124:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestStatus_$32_memory_ptr",
                        "typeString": "struct CardManager.RequestStatus memory"
                      }
                    },
                    "src": "2997:148:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                      "typeString": "struct CardManager.RequestStatus storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:148:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3171:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "requestIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3155:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3166:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3155:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:26:5"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "lastRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "3191:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 122,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3207:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3191:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:25:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 126,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3243:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 127,
                        "name": "numWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "3254:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 125,
                      "name": "RequestSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3231:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                        "typeString": "function (uint256,uint32)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "EmitStatement",
                  "src": "3226:37:5"
                },
                {
                  "expression": {
                    "id": 130,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "3280:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 131,
                  "nodeType": "Return",
                  "src": "3273:16:5"
                }
              ]
            },
            "functionSelector": "e0c86289",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2676:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 540,
                  "src": "2676:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2676:9:5"
              }
            ],
            "name": "requestRandomWords",
            "nameLocation": "2630:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:2:5"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2711:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2703:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2702:19:5"
            },
            "scope": 203,
            "src": "2621:675:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              255
            ],
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "3421:241:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 143,
                            "name": "s_requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3439:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                              "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                            }
                          },
                          "id": 145,
                          "indexExpression": {
                            "id": 144,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3450:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3439:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                            "typeString": "struct CardManager.RequestStatus storage ref"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3462:6:5",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "3439:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72657175657374206e6f7420666f756e64",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3470:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                          "typeString": "literal_string \"request not found\""
                        },
                        "value": "request not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                          "typeString": "literal_string \"request not found\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3431:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3431:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "3431:59:5"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 150,
                          "name": "s_requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "3500:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                            "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "id": 151,
                          "name": "_requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3511:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3500:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                          "typeString": "struct CardManager.RequestStatus storage ref"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3523:9:5",
                      "memberName": "fulfilled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3500:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3535:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3500:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:39:5"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 157,
                          "name": "s_requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "3549:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                            "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "id": 158,
                          "name": "_requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3560:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3549:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                          "typeString": "struct CardManager.RequestStatus storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3572:11:5",
                      "memberName": "randomWords",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3549:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "_randomWords",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3586:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3549:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:49:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "3630:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_randomWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3642:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 164,
                      "name": "RequestFulfilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3613:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3613:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "3608:47:5"
                }
              ]
            },
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomWords",
            "nameLocation": "3311:18:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3412:8:5"
            },
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "3347:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3339:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_randomWords",
                  "nameLocation": "3384:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3367:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3367:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 137,
                    "nodeType": "ArrayTypeName",
                    "src": "3367:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3329:73:5"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3421:0:5"
            },
            "scope": 203,
            "src": "3302:360:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "3797:196:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 181,
                            "name": "s_requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3815:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                              "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                            }
                          },
                          "id": 183,
                          "indexExpression": {
                            "id": 182,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3826:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3815:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                            "typeString": "struct CardManager.RequestStatus storage ref"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3838:6:5",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "3815:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72657175657374206e6f7420666f756e64",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3846:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                          "typeString": "literal_string \"request not found\""
                        },
                        "value": "request not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                          "typeString": "literal_string \"request not found\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3807:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:59:5"
                },
                {
                  "assignments": [
                    190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "3897:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "3876:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestStatus_$32_memory_ptr",
                        "typeString": "struct CardManager.RequestStatus"
                      },
                      "typeName": {
                        "id": 189,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 188,
                          "name": "RequestStatus",
                          "nameLocations": [
                            "3876:13:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "3876:13:5"
                        },
                        "referencedDeclaration": 32,
                        "src": "3876:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestStatus_$32_storage_ptr",
                          "typeString": "struct CardManager.RequestStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 194,
                  "initialValue": {
                    "baseExpression": {
                      "id": 191,
                      "name": "s_requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3907:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$32_storage_$",
                        "typeString": "mapping(uint256 => struct CardManager.RequestStatus storage ref)"
                      }
                    },
                    "id": 193,
                    "indexExpression": {
                      "id": 192,
                      "name": "_requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "3918:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3907:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RequestStatus_$32_storage",
                      "typeString": "struct CardManager.RequestStatus storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:53:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 195,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3947:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$32_memory_ptr",
                            "typeString": "struct CardManager.RequestStatus memory"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3955:9:5",
                        "memberName": "fulfilled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "3947:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 197,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3966:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$32_memory_ptr",
                            "typeString": "struct CardManager.RequestStatus memory"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3974:11:5",
                        "memberName": "randomWords",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "3966:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 199,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3946:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 179,
                  "id": 200,
                  "nodeType": "Return",
                  "src": "3939:47:5"
                }
              ]
            },
            "functionSelector": "d8a4676f",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRequestStatus",
            "nameLocation": "3677:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "3711:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3703:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3693:34:5"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "fulfilled",
                  "nameLocation": "3756:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3751:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "randomWords",
                  "nameLocation": "3784:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3767:28:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 176,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3767:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 177,
                    "nodeType": "ArrayTypeName",
                    "src": "3767:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:46:5"
            },
            "scope": 203,
            "src": "3668:325:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 204,
        "src": "431:3564:5",
        "usedErrors": [
          233
        ],
        "usedEvents": [
          17,
          24,
          395,
          401
        ]
      }
    ],
    "src": "34:3962:5"
  },
  "bytecode": "60a06040527f474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c600655600780546001600160501b03191666050003000186a017905534801561004d57600080fd5b50604051610c02380380610c0283398101604081905261006c916101f9565b738103b0a8a00be2ddc778e6e7eaa21791cd36462560805233806000816100da5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b038481169190911790915581161561010a5761010a81610150565b5050600380546001600160401b03909316600160a01b026001600160e01b031990931692909217738103b0a8a00be2ddc778e6e7eaa21791cd3646251790915550610229565b336001600160a01b038216036101a85760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561020b57600080fd5b81516001600160401b038116811461022257600080fd5b9392505050565b6080516109b761024b6000396000818161018901526101cb01526109b76000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a168fa8911610066578063a168fa89146100f6578063d8a4676f14610139578063e0c862891461015a578063f2fde38b14610162578063fc2a88c31461017557600080fd5b80631fe543e31461009857806379ba5097146100ad5780638796ba8c146100b55780638da5cb5b146100db575b600080fd5b6100ab6100a63660046107dd565b61017e565b005b6100ab61020b565b6100c86100c33660046108a7565b6102b5565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100d2565b6101226101043660046108a7565b60026020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016100d2565b61014c6101473660046108a7565b6102d6565b6040516100d29291906108fc565b6100c86103ca565b6100ab61017036600461091f565b61058f565b6100c860055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fd5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61020782826105a3565b5050565b6001546001600160a01b0316331461025e5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016101f4565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b600481815481106102c557600080fd5b600091825260209091200154905081565b600081815260026020526040812054606090610100900460ff166103305760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016101f4565b60008381526002602090815260408083208151606081018352815460ff80821615158352610100909104161515818501526001820180548451818702810187018652818152929593948601938301828280156103ab57602002820191906000526020600020905b815481526020019060010190808311610397575b5050505050815250509050806000015181604001519250925050915091565b60006103d4610669565b6003546006546007546040516305d3b1d360e41b81526004810192909252600160a01b830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af115801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f919061094f565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600283529590932084518154945161ffff1990951690151561ff001916176101009415159490940293909317835593518051959650929491936105049391850192910190610767565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0182905550600581905560075460408051838152660100000000000090920463ffffffff1660208301527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b610597610669565b6105a0816106be565b50565b600082815260026020526040902054610100900460ff166105fa5760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016101f4565b6000828152600260209081526040909120805460ff191660019081178255835161062b939290910191840190610767565b507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d828260405161065d929190610968565b60405180910390a15050565b6000546001600160a01b031633146106bc5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016101f4565b565b336001600160a01b038216036107165760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016101f4565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8280548282559060005260206000209081019282156107a2579160200282015b828111156107a2578251825591602001919060010190610787565b506107ae9291506107b2565b5090565b5b808211156107ae57600081556001016107b3565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107f057600080fd5b8235915060208084013567ffffffffffffffff8082111561081057600080fd5b818601915086601f83011261082457600080fd5b813581811115610836576108366107c7565b8060051b604051601f19603f8301168101818110858211171561085b5761085b6107c7565b60405291825284820192508381018501918983111561087957600080fd5b938501935b828510156108975784358452938501939285019261087e565b8096505050505050509250929050565b6000602082840312156108b957600080fd5b5035919050565b60008151808452602080850194506020840160005b838110156108f1578151875295820195908201906001016108d5565b509495945050505050565b821515815260406020820152600061091760408301846108c0565b949350505050565b60006020828403121561093157600080fd5b81356001600160a01b038116811461094857600080fd5b9392505050565b60006020828403121561096157600080fd5b5051919050565b82815260406020820152600061091760408301846108c056fea26469706673582212208c991698b407dfcbf08d1c69dac3e80b16cb849ba6a574a9cf33984168bad0ce64736f6c63430008190033",
  "bytecodeSha1": "79e24a07d27aa4d341547eca723a4f9019fd7698",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "CardManager",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "27": [
            1637,
            1653,
            true
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "26": [
            1902,
            1923,
            true
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "25": [
            1128,
            1156,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "28": [
            6893,
            6921,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "CardManager.fulfillRandomWords": {
          "24": [
            3439,
            3468,
            true
          ]
        },
        "CardManager.getRequestStatus": {
          "23": [
            3815,
            3844,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "20": [
            1629,
            1681
          ],
          "21": [
            1688,
            1707
          ],
          "22": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "19": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "3": [
            1120,
            1183
          ],
          "4": [
            1222,
            1242
          ],
          "5": [
            1248,
            1275
          ],
          "6": [
            1282,
            1329
          ]
        },
        "ConfirmedOwnerWithProposal.owner": {
          "0": [
            1436,
            1450
          ]
        },
        "ConfirmedOwnerWithProposal.transferOwnership": {
          "14": [
            914,
            936
          ]
        }
      },
      "2": {},
      "3": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "1": [
            6889,
            6998
          ],
          "2": [
            7003,
            7045
          ]
        }
      },
      "4": {},
      "5": {
        "CardManager.fulfillRandomWords": {
          "15": [
            3431,
            3490
          ],
          "16": [
            3500,
            3539
          ],
          "17": [
            3549,
            3598
          ],
          "18": [
            3608,
            3655
          ]
        },
        "CardManager.getRequestStatus": {
          "7": [
            3807,
            3866
          ],
          "8": [
            3939,
            3986
          ]
        },
        "CardManager.requestRandomWords": {
          "9": [
            2798,
            2987
          ],
          "10": [
            2997,
            3145
          ],
          "11": [
            3155,
            3181
          ],
          "12": [
            3191,
            3216
          ],
          "13": [
            3226,
            3263
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@2.9.0/ConfirmedOwner",
    "smartcontractkit/chainlink@2.9.0/ConfirmedOwnerWithProposal",
    "smartcontractkit/chainlink@2.9.0/IOwnable",
    "smartcontractkit/chainlink@2.9.0/VRFConsumerBaseV2",
    "smartcontractkit/chainlink@2.9.0/VRFCoordinatorV2Interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063a168fa8911610066578063a168fa89146100f6578063d8a4676f14610139578063e0c862891461015a578063f2fde38b14610162578063fc2a88c31461017557600080fd5b80631fe543e31461009857806379ba5097146100ad5780638796ba8c146100b55780638da5cb5b146100db575b600080fd5b6100ab6100a63660046107dd565b61017e565b005b6100ab61020b565b6100c86100c33660046108a7565b6102b5565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100d2565b6101226101043660046108a7565b60026020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016100d2565b61014c6101473660046108a7565b6102d6565b6040516100d29291906108fc565b6100c86103ca565b6100ab61017036600461091f565b61058f565b6100c860055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fd5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61020782826105a3565b5050565b6001546001600160a01b0316331461025e5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016101f4565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b600481815481106102c557600080fd5b600091825260209091200154905081565b600081815260026020526040812054606090610100900460ff166103305760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016101f4565b60008381526002602090815260408083208151606081018352815460ff80821615158352610100909104161515818501526001820180548451818702810187018652818152929593948601938301828280156103ab57602002820191906000526020600020905b815481526020019060010190808311610397575b5050505050815250509050806000015181604001519250925050915091565b60006103d4610669565b6003546006546007546040516305d3b1d360e41b81526004810192909252600160a01b830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af115801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f919061094f565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600283529590932084518154945161ffff1990951690151561ff001916176101009415159490940293909317835593518051959650929491936105049391850192910190610767565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0182905550600581905560075460408051838152660100000000000090920463ffffffff1660208301527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b610597610669565b6105a0816106be565b50565b600082815260026020526040902054610100900460ff166105fa5760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016101f4565b6000828152600260209081526040909120805460ff191660019081178255835161062b939290910191840190610767565b507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d828260405161065d929190610968565b60405180910390a15050565b6000546001600160a01b031633146106bc5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016101f4565b565b336001600160a01b038216036107165760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016101f4565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8280548282559060005260206000209081019282156107a2579160200282015b828111156107a2578251825591602001919060010190610787565b506107ae9291506107b2565b5090565b5b808211156107ae57600081556001016107b3565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107f057600080fd5b8235915060208084013567ffffffffffffffff8082111561081057600080fd5b818601915086601f83011261082457600080fd5b813581811115610836576108366107c7565b8060051b604051601f19603f8301168101818110858211171561085b5761085b6107c7565b60405291825284820192508381018501918983111561087957600080fd5b938501935b828510156108975784358452938501939285019261087e565b8096505050505050509250929050565b6000602082840312156108b957600080fd5b5035919050565b60008151808452602080850194506020840160005b838110156108f1578151875295820195908201906001016108d5565b509495945050505050565b821515815260406020820152600061091760408301846108c0565b949350505050565b60006020828403121561093157600080fd5b81356001600160a01b038116811461094857600080fd5b9392505050565b60006020828403121561096157600080fd5b5051919050565b82815260406020820152600061091760408301846108c056fea26469706673582212208c991698b407dfcbf08d1c69dac3e80b16cb849ba6a574a9cf33984168bad0ce64736f6c63430008190033",
  "deployedSourceMap": "431:3564:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6794:256:3;;;;;;:::i;:::-;;:::i;:::-;;1022:312:1;;;:::i;1044:27:5:-;;;;;;:::i;:::-;;:::i;:::-;;;1665:25:6;;;1653:2;1638:18;1044:27:5;;;;;;;;1374:81:1;1421:7;1443;1374:81;;-1:-1:-1;;;;;1443:7:1;;;1847:51:6;;1835:2;1820:18;1374:81:1;1701:203:6;817:59:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2096:14:6;;2089:22;2071:41;;2155:14;;2148:22;2143:2;2128:18;;2121:50;2044:18;817:59:5;1909:268:6;3668:325:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2621:675::-;;;:::i;843:98:1:-;;;;;;:::i;:::-;;:::i;1077:28:5:-;;;;;;6794:256:3;6893:10;-1:-1:-1;;;;;6907:14:3;6893:28;;6889:109;;6938:53;;-1:-1:-1;;;6938:53:3;;6964:10;6938:53;;;3476:34:6;-1:-1:-1;;;;;6976:14:3;3546:15:6;3526:18;;;3519:43;3411:18;;6938:53:3;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;1022:312:1:-;1142:14;;-1:-1:-1;;;;;1142:14:1;1128:10;:28;1120:63;;;;-1:-1:-1;;;1120:63:1;;3775:2:6;1120:63:1;;;3757:21:6;3814:2;3794:18;;;3787:30;-1:-1:-1;;;3833:18:6;;;3826:52;3895:18;;1120:63:1;3573:346:6;1120:63:1;1190:16;1209:7;;1232:10;-1:-1:-1;;;;;;1222:20:1;;;;;;;-1:-1:-1;1248:27:1;;;;;;;1287:42;;-1:-1:-1;;;;;1209:7:1;;;;1232:10;;1209:7;;1287:42;;;1067:267;1022:312::o;1044:27:5:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:27:5;:::o;3668:325::-;3751:14;3815:22;;;:10;:22;;;;;:29;3767:28;;3815:29;;;;;3807:59;;;;-1:-1:-1;;;3807:59:5;;4126:2:6;3807:59:5;;;4108:21:6;4165:2;4145:18;;;4138:30;-1:-1:-1;;;4184:18:6;;;4177:47;4241:18;;3807:59:5;3924:341:6;3807:59:5;3876:28;3907:22;;;:10;:22;;;;;;;;3876:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3907:22;;3876:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3947:7;:17;;;3966:7;:19;;;3939:47;;;;;3668:325;;;:::o;2621:675::-;2703:17;2059:20:1;:18;:20::i;:::-;2810:11:5::1;::::0;2854:7:::1;::::0;2905:20:::1;::::0;2810:177:::1;::::0;-1:-1:-1;;;2810:177:5;;2905:20:::1;2810:177:::0;::::1;4521:25:6::0;;;;-1:-1:-1;;;2875:16:5;::::1;;;4562:18:6::0;;;4555:59;2905:20:5;;::::1;;;4630:18:6::0;;;4623:47;2939:16:5::1;::::0;;::::1;4715:18:6::0;;;4708:43;2969:8:5;;;::::1;;4767:19:6::0;;;4760:44;-1:-1:-1;;;;;2810:11:5;;::::1;::::0;:30:::1;::::0;4493:19:6;;2810:177:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3021:124;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3021:124:5;;;;::::1;::::0;;::::1;::::0;;;3062:16;;;;;;;::::1;::::0;;3021:124;;;;;;2997:21;;;:10:::1;:21:::0;;;;;;:148;;;;;;-1:-1:-1;;2997:148:5;;;;::::1;;-1:-1:-1::0;;2997:148:5;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;2798:189;;-1:-1:-1;3021:124:5;;2997:21;;:148:::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3155:10:5::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3155:26:5;;;;;::::1;::::0;;;-1:-1:-1;3191:13:5::1;:25:::0;;;3254:8:::1;::::0;3231:32:::1;::::0;;5176:25:6;;;3254:8:5;;;::::1;;;5232:2:6::0;5217:18;;5210:51;3231:32:5::1;::::0;5149:18:6;3231:32:5::1;;;;;;;2621:675:::0;:::o;843:98:1:-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;3302:360:5:-;3439:22;;;;:10;:22;;;;;:29;;;;;;3431:59;;;;-1:-1:-1;;;3431:59:5;;4126:2:6;3431:59:5;;;4108:21:6;4165:2;4145:18;;;4138:30;-1:-1:-1;;;4184:18:6;;;4177:47;4241:18;;3431:59:5;3924:341:6;3431:59:5;3500:22;;;;:10;:22;;;;;;;;:39;;-1:-1:-1;;3500:39:5;3535:4;3500:39;;;;;3549:49;;;;:34;;;;;:49;;;;:::i;:::-;;3613:42;3630:10;3642:12;3613:42;;;;;;;:::i;:::-;;;;;;;;3302:360;;:::o;1797:158:1:-;1916:7;;-1:-1:-1;;;;;1916:7:1;1902:10;:21;1894:56;;;;-1:-1:-1;;;1894:56:1;;5811:2:6;1894:56:1;;;5793:21:6;5850:2;5830:18;;;5823:30;-1:-1:-1;;;5869:18:6;;;5862:52;5931:18;;1894:56:1;5609:346:6;1894:56:1;1797:158::o;1528:235::-;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;6162:2:6;1629:52:1;;;6144:21:6;6201:2;6181:18;;;6174:30;6240:25;6220:18;;;6213:53;6283:18;;1629:52:1;5960:347:6;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1183;239:6;247;300:2;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;352:9;339:23;329:33;;381:2;434;423:9;419:18;406:32;457:18;498:2;490:6;487:14;484:34;;;514:1;511;504:12;484:34;552:6;541:9;537:22;527:32;;597:7;590:4;586:2;582:13;578:27;568:55;;619:1;616;609:12;568:55;655:2;642:16;677:2;673;670:10;667:36;;;683:18;;:::i;:::-;729:2;726:1;722:10;761:2;755:9;824:2;820:7;815:2;811;807:11;803:25;795:6;791:38;879:6;867:10;864:22;859:2;847:10;844:18;841:46;838:72;;;890:18;;:::i;:::-;926:2;919:22;976:18;;;1010:15;;;;-1:-1:-1;1052:11:6;;;1048:20;;;1080:19;;;1077:39;;;1112:1;1109;1102:12;1077:39;1136:11;;;;1156:142;1172:6;1167:3;1164:15;1156:142;;;1238:17;;1226:30;;1189:12;;;;1276;;;;1156:142;;;1317:6;1307:16;;;;;;;;146:1183;;;;;:::o;1334:180::-;1393:6;1446:2;1434:9;1425:7;1421:23;1417:32;1414:52;;;1462:1;1459;1452:12;1414:52;-1:-1:-1;1485:23:6;;1334:180;-1:-1:-1;1334:180:6:o;2182:439::-;2235:3;2273:5;2267:12;2300:6;2295:3;2288:19;2326:4;2355;2350:3;2346:14;2339:21;;2394:4;2387:5;2383:16;2417:1;2427:169;2441:6;2438:1;2435:13;2427:169;;;2502:13;;2490:26;;2536:12;;;;2571:15;;;;2463:1;2456:9;2427:169;;;-1:-1:-1;2612:3:6;;2182:439;-1:-1:-1;;;;;2182:439:6:o;2626:342::-;2841:6;2834:14;2827:22;2816:9;2809:41;2886:2;2881;2870:9;2866:18;2859:30;2790:4;2906:56;2958:2;2947:9;2943:18;2935:6;2906:56;:::i;:::-;2898:64;2626:342;-1:-1:-1;;;;2626:342:6:o;2973:286::-;3032:6;3085:2;3073:9;3064:7;3060:23;3056:32;3053:52;;;3101:1;3098;3091:12;3053:52;3127:23;;-1:-1:-1;;;;;3179:31:6;;3169:42;;3159:70;;3225:1;3222;3215:12;3159:70;3248:5;2973:286;-1:-1:-1;;;2973:286:6:o;4815:184::-;4885:6;4938:2;4926:9;4917:7;4913:23;4909:32;4906:52;;;4954:1;4951;4944:12;4906:52;-1:-1:-1;4977:16:6;;4815:184;-1:-1:-1;4815:184:6:o;5272:332::-;5479:6;5468:9;5461:25;5522:2;5517;5506:9;5502:18;5495:30;5442:4;5542:56;5594:2;5583:9;5579:18;5571:6;5542:56;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "constructor": {
        "notice": "HARDCODED FOR SEPOLIA COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "version": 1
  },
  "offset": [
    431,
    3995
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA168FA89 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA168FA89 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xD8A4676F EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xFC2A88C3 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH2 0x20B JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD2 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xD2 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP3 SWAP2 SWAP1 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0xAB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH2 0xC8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x207 DUP3 DUP3 PUSH2 0x5A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO DUP2 DUP6 ADD MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP6 SWAP4 SWAP5 DUP7 ADD SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x397 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP4 ADD MSTORE PUSH5 0x100000000 DUP2 DIV PUSH2 0xFFFF AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP5 DUP2 MSTORE DUP1 DUP4 ADD DUP8 MSTORE DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP6 MSTORE PUSH1 0x2 DUP4 MSTORE SWAP6 SWAP1 SWAP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP6 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH2 0x504 SWAP4 SWAP2 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x767 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP3 SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH7 0x1000000000000 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH2 0x597 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x6BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP4 MLOAD PUSH2 0x62B SWAP4 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x767 JUMP JUMPDEST POP PUSH32 0xFE2E2D779DBA245964D4E3EF9B994BE63856FD568BF7D3CA9E224755CB1BD54D DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x65D SWAP3 SWAP2 SWAP1 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x7A2 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7A2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x787 JUMP JUMPDEST POP PUSH2 0x7AE SWAP3 SWAP2 POP PUSH2 0x7B2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7B3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x836 JUMPI PUSH2 0x836 PUSH2 0x7C7 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x897 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x87E JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8F1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8D5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x917 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x917 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP10 AND SWAP9 0xB4 SMOD 0xDF 0xCB CREATE DUP14 SHR PUSH10 0xDAC3E80B16CB849BA6A5 PUSH21 0xA9CF33984168BAD0CE64736F6C6343000819003300 ",
  "pcMap": {
    "0": {
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA168FA89"
    },
    "38": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA168FA89"
    },
    "49": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF6"
    },
    "53": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD8A4676F"
    },
    "60": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x139"
    },
    "64": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE0C86289"
    },
    "71": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "75": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x162"
    },
    "86": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFC2A88C3"
    },
    "93": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "97": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "REVERT",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1FE543E3"
    },
    "109": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x79BA5097"
    },
    "120": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD"
    },
    "124": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8796BA8C"
    },
    "131": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5"
    },
    "135": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB"
    },
    "146": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        431,
        3995
      ],
      "op": "REVERT",
      "path": "5"
    },
    "152": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "156": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6"
    },
    "159": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "160": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "162": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DD"
    },
    "165": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "166": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "167": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E"
    },
    "170": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "171": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "STOP",
      "path": "3"
    },
    "173": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1022,
        1334
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "174": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1022,
        1334
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "177": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1022,
        1334
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B"
    },
    "180": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        1022,
        1334
      ],
      "op": "JUMP",
      "path": "1"
    },
    "181": {
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "182": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8"
    },
    "185": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3"
    },
    "188": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "189": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "191": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A7"
    },
    "194": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMP",
      "path": "5"
    },
    "195": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "196": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B5"
    },
    "199": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMP",
      "path": "5"
    },
    "200": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "201": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "203": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "204": {
      "op": "SWAP1"
    },
    "205": {
      "op": "DUP2"
    },
    "206": {
      "op": "MSTORE"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "211": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "213": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "214": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP1",
      "path": "5"
    },
    "215": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "216": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SUB",
      "path": "5"
    },
    "217": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "218": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "RETURN",
      "path": "5"
    },
    "219": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1374,
        1455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1421,
        1428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "222": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1443,
        1450
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 0
    },
    "223": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1374,
        1455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "225": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1374,
        1455
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "232": {
      "op": "SHL"
    },
    "233": {
      "op": "SUB"
    },
    "234": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1443,
        1450
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "235": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1443,
        1450
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "236": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1443,
        1450
      ],
      "op": "AND",
      "path": "1"
    },
    "237": {
      "op": "DUP2"
    },
    "238": {
      "op": "MSTORE"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "241": {
      "op": "ADD"
    },
    "242": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        1374,
        1455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD2"
    },
    "245": {
      "op": "JUMP"
    },
    "246": {
      "offset": [
        817,
        876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "247": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122"
    },
    "250": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104"
    },
    "253": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "254": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "256": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A7"
    },
    "259": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "jump": "i",
      "offset": [
        817,
        876
      ],
      "op": "JUMP",
      "path": "5"
    },
    "260": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "261": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "263": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "265": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "266": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "268": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "269": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DUP2",
      "path": "5"
    },
    "270": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "271": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "273": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "274": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "275": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "276": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "278": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DUP3",
      "path": "5"
    },
    "280": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "AND",
      "path": "5"
    },
    "281": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "282": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "285": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "286": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DIV",
      "path": "5"
    },
    "287": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "AND",
      "path": "5"
    },
    "288": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DUP3",
      "path": "5"
    },
    "289": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "JUMP",
      "path": "5"
    },
    "290": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "291": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "293": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "DUP1",
      "path": "5"
    },
    "294": {
      "fn": "ConfirmedOwnerWithProposal.owner",
      "offset": [
        817,
        876
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "295": {
      "op": "SWAP3"
    },
    "296": {
      "op": "ISZERO"
    },
    "297": {
      "op": "ISZERO"
    },
    "298": {
      "op": "DUP4"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "op": "SWAP1"
    },
    "301": {
      "op": "ISZERO"
    },
    "302": {
      "op": "ISZERO"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "305": {
      "op": "DUP4"
    },
    "306": {
      "op": "ADD"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "offset": [
        817,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2"
    },
    "312": {
      "op": "JUMP"
    },
    "313": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "314": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "317": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "320": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "321": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "323": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A7"
    },
    "326": {
      "fn": "CardManager.getRequestStatus",
      "jump": "i",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "327": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "328": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D6"
    },
    "331": {
      "fn": "CardManager.getRequestStatus",
      "jump": "i",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "332": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "333": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "335": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "336": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2"
    },
    "339": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "340": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "341": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "342": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "345": {
      "fn": "CardManager.getRequestStatus",
      "jump": "i",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "346": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2621,
        3296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "347": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2621,
        3296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8"
    },
    "350": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2621,
        3296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CA"
    },
    "353": {
      "fn": "CardManager.requestRandomWords",
      "jump": "i",
      "offset": [
        2621,
        3296
      ],
      "op": "JUMP",
      "path": "5"
    },
    "354": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "358": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170"
    },
    "361": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "362": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "364": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x91F"
    },
    "367": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "jump": "i",
      "offset": [
        843,
        941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "368": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "369": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58F"
    },
    "372": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "jump": "i",
      "offset": [
        843,
        941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "373": {
      "offset": [
        1077,
        1105
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        1077,
        1105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8"
    },
    "377": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        1077,
        1105
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "379": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        1077,
        1105
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "380": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        1077,
        1105
      ],
      "op": "DUP2",
      "path": "5"
    },
    "381": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        1077,
        1105
      ],
      "op": "JUMP",
      "path": "5"
    },
    "382": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "383": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6893,
        6903
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 1
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6907,
        6921
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "425": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6893,
        6921
      ],
      "op": "AND",
      "path": "3"
    },
    "426": {
      "branch": 28,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6893,
        6921
      ],
      "op": "EQ",
      "path": "3"
    },
    "427": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6889,
        6998
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "430": {
      "branch": 28,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6889,
        6998
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "431": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "433": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "434": {
      "op": "PUSH4",
      "value": "0x73E64FD"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "DUP2",
      "path": "3"
    },
    "443": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "444": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6964,
        6974
      ],
      "op": "CALLER",
      "path": "3"
    },
    "445": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "447": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "DUP3",
      "path": "3"
    },
    "448": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "ADD",
      "path": "3"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6976,
        6990
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "491": {
      "op": "AND"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "501": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "503": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "504": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "DUP1",
      "path": "3"
    },
    "505": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "506": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "SUB",
      "path": "3"
    },
    "507": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "508": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6938,
        6991
      ],
      "op": "REVERT",
      "path": "3"
    },
    "509": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6889,
        6998
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "510": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        7003,
        7045
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 2,
      "value": "0x207"
    },
    "513": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        7022,
        7031
      ],
      "op": "DUP3",
      "path": "3"
    },
    "514": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        7033,
        7044
      ],
      "op": "DUP3",
      "path": "3"
    },
    "515": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        7003,
        7021
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A3"
    },
    "518": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        7003,
        7045
      ],
      "op": "JUMP",
      "path": "3"
    },
    "519": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        7003,
        7045
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "521": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6794,
        7050
      ],
      "op": "POP",
      "path": "3"
    },
    "522": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        6794,
        7050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "523": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1022,
        1334
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "524": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x1"
    },
    "526": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "SUB"
    },
    "535": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "AND",
      "path": "1"
    },
    "536": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "1"
    },
    "537": {
      "branch": 25,
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "EQ",
      "path": "1"
    },
    "538": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25E"
    },
    "541": {
      "branch": 25,
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "542": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "544": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "DUP2",
      "path": "1"
    },
    "553": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "556": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "558": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "DUP3",
      "path": "1"
    },
    "559": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "ADD",
      "path": "1"
    },
    "560": {
      "op": "MSTORE"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "565": {
      "op": "DUP3"
    },
    "566": {
      "op": "ADD"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "596": {
      "op": "DUP3"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "605": {
      "op": "JUMP"
    },
    "606": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1120,
        1183
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1190,
        1206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "609": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "DUP1",
      "path": "1"
    },
    "610": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "611": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1232,
        1242
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 4
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "618": {
      "op": "SHL"
    },
    "619": {
      "op": "SUB"
    },
    "620": {
      "op": "NOT"
    },
    "621": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "DUP1",
      "path": "1"
    },
    "622": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "DUP4",
      "path": "1"
    },
    "623": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "AND",
      "path": "1"
    },
    "624": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "DUP3",
      "path": "1"
    },
    "625": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "OR",
      "path": "1"
    },
    "626": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "DUP5",
      "path": "1"
    },
    "627": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1222,
        1242
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 5
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "633": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "634": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "AND",
      "path": "1"
    },
    "635": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "636": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1248,
        1275
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "637": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x40"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "op": "SUB"
    },
    "648": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "AND",
      "path": "1"
    },
    "651": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "652": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1232,
        1242
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "653": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1232,
        1242
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "654": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "DUP4",
      "path": "1"
    },
    "655": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1209,
        1216
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "656": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "689": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "690": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "1"
    },
    "691": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1067,
        1334
      ],
      "op": "POP",
      "path": "1"
    },
    "692": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "o",
      "offset": [
        1022,
        1334
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "694": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "696": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP2",
      "path": "5"
    },
    "697": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP2",
      "path": "5"
    },
    "698": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "699": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP2",
      "path": "5"
    },
    "700": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "LT",
      "path": "5"
    },
    "701": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C5"
    },
    "704": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "705": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "707": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP1",
      "path": "5"
    },
    "708": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "REVERT",
      "path": "5"
    },
    "709": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "710": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "712": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "713": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "DUP3",
      "path": "5"
    },
    "714": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "715": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "717": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "718": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "719": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "720": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "ADD",
      "path": "5"
    },
    "721": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "722": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1044,
        1071
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "offset": [
        1044,
        1071
      ],
      "op": "DUP2",
      "path": "5"
    },
    "725": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "o",
      "offset": [
        1044,
        1071
      ],
      "op": "JUMP",
      "path": "5"
    },
    "726": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "727": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3751,
        3765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "729": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 7
    },
    "730": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "DUP2",
      "path": "5"
    },
    "731": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "732": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "734": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "736": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "737": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "739": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "DUP2",
      "path": "5"
    },
    "740": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3837
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "741": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "742": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3767,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "744": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3767,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "745": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "748": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "749": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "DIV",
      "path": "5"
    },
    "750": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "752": {
      "branch": 23,
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3815,
        3844
      ],
      "op": "AND",
      "path": "5"
    },
    "753": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x330"
    },
    "756": {
      "branch": 23,
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "757": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "759": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "DUP2",
      "path": "5"
    },
    "768": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "773": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "DUP3",
      "path": "5"
    },
    "774": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "ADD",
      "path": "5"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH17",
      "value": "0x1C995C5D595CDD081B9BDD08199BDD5B99"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F4"
    },
    "815": {
      "op": "JUMP"
    },
    "816": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3807,
        3866
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "817": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3904
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "819": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "820": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "821": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "822": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3917
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "824": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "826": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "827": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "828": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "829": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "831": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "832": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "833": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "834": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "835": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "836": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "838": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "839": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "840": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "841": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "842": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "843": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "844": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "846": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "847": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "848": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "AND",
      "path": "5"
    },
    "849": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "850": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "851": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "852": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "853": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "856": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "857": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "858": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DIV",
      "path": "5"
    },
    "859": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "AND",
      "path": "5"
    },
    "860": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "861": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "862": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "863": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP6",
      "path": "5"
    },
    "864": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "865": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "866": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "868": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "869": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "870": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "871": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "872": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP5",
      "path": "5"
    },
    "873": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "874": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "875": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP8",
      "path": "5"
    },
    "876": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MUL",
      "path": "5"
    },
    "877": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "878": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "879": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP8",
      "path": "5"
    },
    "880": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "881": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP7",
      "path": "5"
    },
    "882": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "883": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "884": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "885": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "886": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "887": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "888": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "889": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3907,
        3929
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "890": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP7",
      "path": "5"
    },
    "891": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "892": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "893": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "894": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "895": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "896": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "897": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "898": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "899": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AB"
    },
    "902": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "903": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "905": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MUL",
      "path": "5"
    },
    "906": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP3",
      "path": "5"
    },
    "907": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "908": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "909": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "910": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "912": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "913": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "915": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "917": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "918": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "919": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "920": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "921": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "922": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "923": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "924": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "926": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "927": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "928": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "930": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "ADD",
      "path": "5"
    },
    "931": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "932": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "933": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "934": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "GT",
      "path": "5"
    },
    "935": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x397"
    },
    "938": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "939": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "940": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "941": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "942": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "943": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "944": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "945": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "946": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "947": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "948": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "949": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "950": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3876,
        3929
      ],
      "op": "POP",
      "path": "5"
    },
    "951": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3947,
        3954
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 8
    },
    "952": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3947,
        3964
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "954": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3947,
        3964
      ],
      "op": "ADD",
      "path": "5"
    },
    "955": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3947,
        3964
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "956": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3966,
        3973
      ],
      "op": "DUP2",
      "path": "5"
    },
    "957": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3966,
        3985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "959": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3966,
        3985
      ],
      "op": "ADD",
      "path": "5"
    },
    "960": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3966,
        3985
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "961": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3939,
        3986
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "962": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3939,
        3986
      ],
      "op": "POP",
      "path": "5"
    },
    "963": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3939,
        3986
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "964": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3939,
        3986
      ],
      "op": "POP",
      "path": "5"
    },
    "965": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3939,
        3986
      ],
      "op": "POP",
      "path": "5"
    },
    "966": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "967": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "POP",
      "path": "5"
    },
    "968": {
      "fn": "CardManager.getRequestStatus",
      "offset": [
        3668,
        3993
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "969": {
      "fn": "CardManager.getRequestStatus",
      "jump": "o",
      "offset": [
        3668,
        3993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "970": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2621,
        3296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "971": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2703,
        2720
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "973": {
      "offset": [
        2059,
        2079
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D4"
    },
    "976": {
      "offset": [
        2059,
        2077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x669"
    },
    "979": {
      "jump": "i",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMP",
      "path": "1"
    },
    "980": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "981": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x3"
    },
    "983": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "984": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2854,
        2861
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "986": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2854,
        2861
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "987": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "989": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "990": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "992": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "993": {
      "op": "PUSH4",
      "value": "0x5D3B1D3"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1002": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1003": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1005": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1006": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ADD",
      "path": "5"
    },
    "1007": {
      "op": "SWAP3"
    },
    "1008": {
      "op": "SWAP1"
    },
    "1009": {
      "op": "SWAP3"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2875,
        2891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1017": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2875,
        2891
      ],
      "op": "DIV",
      "path": "5"
    },
    "1018": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2875,
        2891
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1027": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2875,
        2891
      ],
      "op": "AND",
      "path": "5"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1030": {
      "op": "DUP4"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "1039": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1040": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "DIV",
      "path": "5"
    },
    "1041": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "1044": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2905,
        2925
      ],
      "op": "AND",
      "path": "5"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1047": {
      "op": "DUP4"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2939,
        2955
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1055": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2939,
        2955
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1056": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2939,
        2955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1057": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2939,
        2955
      ],
      "op": "AND",
      "path": "5"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1060": {
      "op": "DUP5"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2969,
        2977
      ],
      "op": "PUSH7",
      "path": "5",
      "value": "0x1000000000000"
    },
    "1071": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2969,
        2977
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1072": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2969,
        2977
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1073": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2969,
        2977
      ],
      "op": "DIV",
      "path": "5"
    },
    "1074": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2969,
        2977
      ],
      "op": "AND",
      "path": "5"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "SUB"
    },
    "1088": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1089": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1090": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "AND",
      "path": "5"
    },
    "1091": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2821
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1092": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2840
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5D3B1D30"
    },
    "1097": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2840
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1103": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1105": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1106": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1107": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1108": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "SUB",
      "path": "5"
    },
    "1109": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1110": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1112": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1113": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "GAS",
      "path": "5"
    },
    "1114": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "CALL",
      "path": "5"
    },
    "1115": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1116": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1117": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1118": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46B"
    },
    "1121": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1122": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1123": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1125": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1126": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1127": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1128": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1130": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1131": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1132": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "POP",
      "path": "5"
    },
    "1133": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "POP",
      "path": "5"
    },
    "1134": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "POP",
      "path": "5"
    },
    "1135": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "POP",
      "path": "5"
    },
    "1136": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1138": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1139": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1140": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1142": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "NOT",
      "path": "5"
    },
    "1143": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1145": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1146": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ADD",
      "path": "5"
    },
    "1147": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "AND",
      "path": "5"
    },
    "1148": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1149": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ADD",
      "path": "5"
    },
    "1150": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1151": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1153": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1154": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "POP",
      "path": "5"
    },
    "1155": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1156": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "ADD",
      "path": "5"
    },
    "1157": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1158": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48F"
    },
    "1161": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1162": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1163": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x94F"
    },
    "1166": {
      "fn": "CardManager.requestRandomWords",
      "jump": "i",
      "offset": [
        2810,
        2987
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1167": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2810,
        2987
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1168": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x40"
    },
    "1170": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1171": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1172": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1174": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1175": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1176": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1177": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1180": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1181": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1182": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1183": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1185": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1187": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1188": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1189": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1190": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1191": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1192": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1193": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1194": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1195": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1196": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1197": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1198": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1199": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1200": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "ADD",
      "path": "5"
    },
    "1201": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1202": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3062,
        3078
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1203": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1204": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1205": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1206": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1207": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1208": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1209": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1210": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1211": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1212": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3007
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1214": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1215": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1216": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1217": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1218": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1219": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1220": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1221": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1222": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1223": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1224": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1225": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1226": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1229": {
      "op": "NOT"
    },
    "1230": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1231": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1232": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "AND",
      "path": "5"
    },
    "1233": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1234": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1235": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1236": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1239": {
      "op": "NOT"
    },
    "1240": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "AND",
      "path": "5"
    },
    "1241": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "OR",
      "path": "5"
    },
    "1242": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1245": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1246": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1247": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1248": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1249": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1250": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1251": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "MUL",
      "path": "5"
    },
    "1252": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1253": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1254": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1255": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "OR",
      "path": "5"
    },
    "1256": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1257": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1258": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1259": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1260": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1261": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1262": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2798,
        2987
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1263": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2798,
        2987
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1266": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3021,
        3145
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1267": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1268": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3018
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1269": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x504"
    },
    "1272": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1273": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1274": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1275": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1276": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1277": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1278": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1279": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1280": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "1283": {
      "fn": "CardManager.requestRandomWords",
      "jump": "i",
      "offset": [
        2997,
        3145
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1284": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2997,
        3145
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1285": {
      "op": "POP"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3165
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x4"
    },
    "1289": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1290": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1291": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1293": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1294": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "ADD",
      "path": "5"
    },
    "1295": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1296": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1299": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1300": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1301": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1302": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1303": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1336": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "ADD",
      "path": "5"
    },
    "1337": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1338": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1339": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3155,
        3181
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3191,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x5"
    },
    "1343": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3191,
        3216
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1344": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3191,
        3216
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1345": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3191,
        3216
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1346": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x7"
    },
    "1348": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1349": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1351": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1352": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1353": {
      "op": "DUP4"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "PUSH7",
      "path": "5",
      "value": "0x1000000000000"
    },
    "1364": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1365": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1366": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "DIV",
      "path": "5"
    },
    "1367": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1372": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3254,
        3262
      ],
      "op": "AND",
      "path": "5"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1375": {
      "op": "DUP4"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE"
    },
    "1411": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1415": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1416": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1417": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1418": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "SUB",
      "path": "5"
    },
    "1419": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1420": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        3231,
        3263
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1421": {
      "fn": "CardManager.requestRandomWords",
      "offset": [
        2621,
        3296
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1422": {
      "fn": "CardManager.requestRandomWords",
      "jump": "o",
      "offset": [
        2621,
        3296
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1423": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1424": {
      "offset": [
        2059,
        2079
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x597"
    },
    "1427": {
      "offset": [
        2059,
        2077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x669"
    },
    "1430": {
      "jump": "i",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1431": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        2059,
        2079
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1432": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        914,
        936
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 14,
      "value": "0x5A0"
    },
    "1435": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        933,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1436": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        914,
        932
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BE"
    },
    "1439": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "jump": "i",
      "offset": [
        914,
        936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1440": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        914,
        936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1441": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "offset": [
        843,
        941
      ],
      "op": "POP",
      "path": "1"
    },
    "1442": {
      "fn": "ConfirmedOwnerWithProposal.transferOwnership",
      "jump": "o",
      "offset": [
        843,
        941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1443": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3302,
        3662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1444": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x0"
    },
    "1446": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1447": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1448": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1449": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1451": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1453": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1454": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1456": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1457": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3461
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1458": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1459": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1462": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1463": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "DIV",
      "path": "5"
    },
    "1464": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1466": {
      "branch": 24,
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3439,
        3468
      ],
      "op": "AND",
      "path": "5"
    },
    "1467": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5FA"
    },
    "1470": {
      "branch": 24,
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1471": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1473": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1482": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1485": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1487": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1488": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "ADD",
      "path": "5"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1494": {
      "op": "DUP3"
    },
    "1495": {
      "op": "ADD"
    },
    "1496": {
      "op": "MSTORE"
    },
    "1497": {
      "op": "PUSH17",
      "value": "0x1C995C5D595CDD081B9BDD08199BDD5B99"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F4"
    },
    "1529": {
      "op": "JUMP"
    },
    "1530": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3431,
        3490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1531": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x0"
    },
    "1533": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1534": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1535": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1536": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1538": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1540": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1541": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1542": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1543": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1545": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1546": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1547": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3522
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1548": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1549": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1552": {
      "op": "NOT"
    },
    "1553": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "AND",
      "path": "5"
    },
    "1554": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3535,
        3539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1556": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1557": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1558": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "OR",
      "path": "5"
    },
    "1559": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1560": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3500,
        3539
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1561": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 17
    },
    "1562": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1563": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x62B"
    },
    "1566": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1567": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3583
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1568": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1569": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1570": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3583
      ],
      "op": "ADD",
      "path": "5"
    },
    "1571": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1572": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1573": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "ADD",
      "path": "5"
    },
    "1574": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1575": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "1578": {
      "fn": "CardManager.fulfillRandomWords",
      "jump": "i",
      "offset": [
        3549,
        3598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1579": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1580": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3549,
        3598
      ],
      "op": "POP",
      "path": "5"
    },
    "1581": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 18,
      "value": "0xFE2E2D779DBA245964D4E3EF9B994BE63856FD568BF7D3CA9E224755CB1BD54D"
    },
    "1614": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3630,
        3640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1615": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3642,
        3654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1616": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1618": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1619": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x65D"
    },
    "1622": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1623": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1624": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1625": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x968"
    },
    "1628": {
      "fn": "CardManager.fulfillRandomWords",
      "jump": "i",
      "offset": [
        3613,
        3655
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1629": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1630": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1632": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1633": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1634": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1635": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SUB",
      "path": "5"
    },
    "1636": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1637": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3613,
        3655
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1638": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3302,
        3662
      ],
      "op": "POP",
      "path": "5"
    },
    "1639": {
      "fn": "CardManager.fulfillRandomWords",
      "offset": [
        3302,
        3662
      ],
      "op": "POP",
      "path": "5"
    },
    "1640": {
      "fn": "CardManager.fulfillRandomWords",
      "jump": "o",
      "offset": [
        3302,
        3662
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1641": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1642": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x0"
    },
    "1644": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "AND",
      "path": "1"
    },
    "1654": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1655": {
      "branch": 26,
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "EQ",
      "path": "1"
    },
    "1656": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BC"
    },
    "1659": {
      "branch": 26,
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1660": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1662": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1671": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1676": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1677": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "ADD",
      "path": "1"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1714": {
      "op": "DUP3"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "MSTORE"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1723": {
      "op": "JUMP"
    },
    "1724": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1894,
        1950
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1725": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1726": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1528,
        1763
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1727": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 20
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1737": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "AND",
      "path": "1"
    },
    "1738": {
      "branch": 27,
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "SUB",
      "path": "1"
    },
    "1739": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x716"
    },
    "1742": {
      "branch": 27,
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1743": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1745": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1757": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1759": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1760": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "ADD",
      "path": "1"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1809": {
      "op": "ADD"
    },
    "1810": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1813": {
      "op": "JUMP"
    },
    "1814": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1629,
        1681
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1815": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x1"
    },
    "1817": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1818": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "op": "NOT"
    },
    "1828": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "AND",
      "path": "1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1838": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1839": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "AND",
      "path": "1"
    },
    "1840": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1841": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1842": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "OR",
      "path": "1"
    },
    "1843": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1844": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1845": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1746,
        1753
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 22
    },
    "1849": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1746,
        1753
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1850": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1852": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1853": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1854": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1688,
        1707
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1855": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1746,
        1753
      ],
      "op": "AND",
      "path": "1"
    },
    "1856": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1746,
        1753
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1857": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "1890": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1891": {
      "op": "SWAP1"
    },
    "1892": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1893": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1528,
        1763
      ],
      "op": "POP",
      "path": "1"
    },
    "1894": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "o",
      "offset": [
        1528,
        1763
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "DUP3"
    },
    "1897": {
      "op": "DUP1"
    },
    "1898": {
      "op": "SLOAD"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "DUP3"
    },
    "1901": {
      "op": "SSTORE"
    },
    "1902": {
      "op": "SWAP1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1910": {
      "op": "KECCAK256"
    },
    "1911": {
      "op": "SWAP1"
    },
    "1912": {
      "op": "DUP2"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "SWAP3"
    },
    "1915": {
      "op": "DUP3"
    },
    "1916": {
      "op": "ISZERO"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1920": {
      "op": "JUMPI"
    },
    "1921": {
      "op": "SWAP2"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1924": {
      "op": "MUL"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "DUP2"
    },
    "1930": {
      "op": "GT"
    },
    "1931": {
      "op": "ISZERO"
    },
    "1932": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1935": {
      "op": "JUMPI"
    },
    "1936": {
      "op": "DUP3"
    },
    "1937": {
      "op": "MLOAD"
    },
    "1938": {
      "op": "DUP3"
    },
    "1939": {
      "op": "SSTORE"
    },
    "1940": {
      "op": "SWAP2"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "op": "SWAP2"
    },
    "1945": {
      "op": "SWAP1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "SWAP1"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1953": {
      "op": "JUMP"
    },
    "1954": {
      "op": "JUMPDEST"
    },
    "1955": {
      "op": "POP"
    },
    "1956": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1959": {
      "op": "SWAP3"
    },
    "1960": {
      "op": "SWAP2"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "1965": {
      "jump": "i",
      "op": "JUMP"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "op": "SWAP1"
    },
    "1969": {
      "jump": "o",
      "op": "JUMP"
    },
    "1970": {
      "op": "JUMPDEST"
    },
    "1971": {
      "op": "JUMPDEST"
    },
    "1972": {
      "op": "DUP1"
    },
    "1973": {
      "op": "DUP3"
    },
    "1974": {
      "op": "GT"
    },
    "1975": {
      "op": "ISZERO"
    },
    "1976": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1979": {
      "op": "JUMPI"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1982": {
      "op": "DUP2"
    },
    "1983": {
      "op": "SSTORE"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x7B3"
    },
    "1990": {
      "op": "JUMP"
    },
    "1991": {
      "op": "JUMPDEST"
    },
    "1992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "op": "REVERT"
    },
    "2013": {
      "op": "JUMPDEST"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2016": {
      "op": "DUP1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2019": {
      "op": "DUP4"
    },
    "2020": {
      "op": "DUP6"
    },
    "2021": {
      "op": "SUB"
    },
    "2022": {
      "op": "SLT"
    },
    "2023": {
      "op": "ISZERO"
    },
    "2024": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2027": {
      "op": "JUMPI"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2030": {
      "op": "DUP1"
    },
    "2031": {
      "op": "REVERT"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "CALLDATALOAD"
    },
    "2035": {
      "op": "SWAP2"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2039": {
      "op": "DUP1"
    },
    "2040": {
      "op": "DUP5"
    },
    "2041": {
      "op": "ADD"
    },
    "2042": {
      "op": "CALLDATALOAD"
    },
    "2043": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2052": {
      "op": "DUP1"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "GT"
    },
    "2055": {
      "op": "ISZERO"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x810"
    },
    "2059": {
      "op": "JUMPI"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2062": {
      "op": "DUP1"
    },
    "2063": {
      "op": "REVERT"
    },
    "2064": {
      "op": "JUMPDEST"
    },
    "2065": {
      "op": "DUP2"
    },
    "2066": {
      "op": "DUP7"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "SWAP2"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "op": "DUP7"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2073": {
      "op": "DUP4"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "op": "SLT"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2079": {
      "op": "JUMPI"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2082": {
      "op": "DUP1"
    },
    "2083": {
      "op": "REVERT"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "DUP2"
    },
    "2086": {
      "op": "CALLDATALOAD"
    },
    "2087": {
      "op": "DUP2"
    },
    "2088": {
      "op": "DUP2"
    },
    "2089": {
      "op": "GT"
    },
    "2090": {
      "op": "ISZERO"
    },
    "2091": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2094": {
      "op": "JUMPI"
    },
    "2095": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2098": {
      "op": "PUSH2",
      "value": "0x7C7"
    },
    "2101": {
      "jump": "i",
      "op": "JUMP"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "DUP1"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2109": {
      "op": "MLOAD"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2112": {
      "op": "NOT"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2115": {
      "op": "DUP4"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "op": "AND"
    },
    "2118": {
      "op": "DUP2"
    },
    "2119": {
      "op": "ADD"
    },
    "2120": {
      "op": "DUP2"
    },
    "2121": {
      "op": "DUP2"
    },
    "2122": {
      "op": "LT"
    },
    "2123": {
      "op": "DUP6"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "GT"
    },
    "2126": {
      "op": "OR"
    },
    "2127": {
      "op": "ISZERO"
    },
    "2128": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "2131": {
      "op": "JUMPI"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "2135": {
      "op": "PUSH2",
      "value": "0x7C7"
    },
    "2138": {
      "jump": "i",
      "op": "JUMP"
    },
    "2139": {
      "op": "JUMPDEST"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2142": {
      "op": "MSTORE"
    },
    "2143": {
      "op": "SWAP2"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "DUP5"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "SWAP3"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "op": "DUP4"
    },
    "2152": {
      "op": "DUP2"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "DUP6"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "SWAP2"
    },
    "2157": {
      "op": "DUP10"
    },
    "2158": {
      "op": "DUP4"
    },
    "2159": {
      "op": "GT"
    },
    "2160": {
      "op": "ISZERO"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x879"
    },
    "2164": {
      "op": "JUMPI"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2167": {
      "op": "DUP1"
    },
    "2168": {
      "op": "REVERT"
    },
    "2169": {
      "op": "JUMPDEST"
    },
    "2170": {
      "op": "SWAP4"
    },
    "2171": {
      "op": "DUP6"
    },
    "2172": {
      "op": "ADD"
    },
    "2173": {
      "op": "SWAP4"
    },
    "2174": {
      "op": "JUMPDEST"
    },
    "2175": {
      "op": "DUP3"
    },
    "2176": {
      "op": "DUP6"
    },
    "2177": {
      "op": "LT"
    },
    "2178": {
      "op": "ISZERO"
    },
    "2179": {
      "op": "PUSH2",
      "value": "0x897"
    },
    "2182": {
      "op": "JUMPI"
    },
    "2183": {
      "op": "DUP5"
    },
    "2184": {
      "op": "CALLDATALOAD"
    },
    "2185": {
      "op": "DUP5"
    },
    "2186": {
      "op": "MSTORE"
    },
    "2187": {
      "op": "SWAP4"
    },
    "2188": {
      "op": "DUP6"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "SWAP4"
    },
    "2191": {
      "op": "SWAP3"
    },
    "2192": {
      "op": "DUP6"
    },
    "2193": {
      "op": "ADD"
    },
    "2194": {
      "op": "SWAP3"
    },
    "2195": {
      "op": "PUSH2",
      "value": "0x87E"
    },
    "2198": {
      "op": "JUMP"
    },
    "2199": {
      "op": "JUMPDEST"
    },
    "2200": {
      "op": "DUP1"
    },
    "2201": {
      "op": "SWAP7"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "op": "POP"
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "SWAP3"
    },
    "2210": {
      "op": "POP"
    },
    "2211": {
      "op": "SWAP3"
    },
    "2212": {
      "op": "SWAP1"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "jump": "o",
      "op": "JUMP"
    },
    "2215": {
      "op": "JUMPDEST"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "DUP5"
    },
    "2222": {
      "op": "SUB"
    },
    "2223": {
      "op": "SLT"
    },
    "2224": {
      "op": "ISZERO"
    },
    "2225": {
      "op": "PUSH2",
      "value": "0x8B9"
    },
    "2228": {
      "op": "JUMPI"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2231": {
      "op": "DUP1"
    },
    "2232": {
      "op": "REVERT"
    },
    "2233": {
      "op": "JUMPDEST"
    },
    "2234": {
      "op": "POP"
    },
    "2235": {
      "op": "CALLDATALOAD"
    },
    "2236": {
      "op": "SWAP2"
    },
    "2237": {
      "op": "SWAP1"
    },
    "2238": {
      "op": "POP"
    },
    "2239": {
      "jump": "o",
      "op": "JUMP"
    },
    "2240": {
      "op": "JUMPDEST"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2243": {
      "op": "DUP2"
    },
    "2244": {
      "op": "MLOAD"
    },
    "2245": {
      "op": "DUP1"
    },
    "2246": {
      "op": "DUP5"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "op": "DUP6"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "op": "SWAP5"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2257": {
      "op": "DUP5"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2261": {
      "op": "JUMPDEST"
    },
    "2262": {
      "op": "DUP4"
    },
    "2263": {
      "op": "DUP2"
    },
    "2264": {
      "op": "LT"
    },
    "2265": {
      "op": "ISZERO"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x8F1"
    },
    "2269": {
      "op": "JUMPI"
    },
    "2270": {
      "op": "DUP2"
    },
    "2271": {
      "op": "MLOAD"
    },
    "2272": {
      "op": "DUP8"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "SWAP6"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "op": "SWAP6"
    },
    "2278": {
      "op": "SWAP1"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "op": "SWAP1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "PUSH2",
      "value": "0x8D5"
    },
    "2288": {
      "op": "JUMP"
    },
    "2289": {
      "op": "JUMPDEST"
    },
    "2290": {
      "op": "POP"
    },
    "2291": {
      "op": "SWAP5"
    },
    "2292": {
      "op": "SWAP6"
    },
    "2293": {
      "op": "SWAP5"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "jump": "o",
      "op": "JUMP"
    },
    "2300": {
      "op": "JUMPDEST"
    },
    "2301": {
      "op": "DUP3"
    },
    "2302": {
      "op": "ISZERO"
    },
    "2303": {
      "op": "ISZERO"
    },
    "2304": {
      "op": "DUP2"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2310": {
      "op": "DUP3"
    },
    "2311": {
      "op": "ADD"
    },
    "2312": {
      "op": "MSTORE"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2315": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2320": {
      "op": "DUP4"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "DUP5"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x8C0"
    },
    "2326": {
      "jump": "i",
      "op": "JUMP"
    },
    "2327": {
      "op": "JUMPDEST"
    },
    "2328": {
      "op": "SWAP5"
    },
    "2329": {
      "op": "SWAP4"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "jump": "o",
      "op": "JUMP"
    },
    "2335": {
      "op": "JUMPDEST"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "DUP5"
    },
    "2342": {
      "op": "SUB"
    },
    "2343": {
      "op": "SLT"
    },
    "2344": {
      "op": "ISZERO"
    },
    "2345": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2348": {
      "op": "JUMPI"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2351": {
      "op": "DUP1"
    },
    "2352": {
      "op": "REVERT"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "DUP2"
    },
    "2355": {
      "op": "CALLDATALOAD"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "op": "SUB"
    },
    "2364": {
      "op": "DUP2"
    },
    "2365": {
      "op": "AND"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "EQ"
    },
    "2368": {
      "op": "PUSH2",
      "value": "0x948"
    },
    "2371": {
      "op": "JUMPI"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2374": {
      "op": "DUP1"
    },
    "2375": {
      "op": "REVERT"
    },
    "2376": {
      "op": "JUMPDEST"
    },
    "2377": {
      "op": "SWAP4"
    },
    "2378": {
      "op": "SWAP3"
    },
    "2379": {
      "op": "POP"
    },
    "2380": {
      "op": "POP"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "jump": "o",
      "op": "JUMP"
    },
    "2383": {
      "op": "JUMPDEST"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2388": {
      "op": "DUP3"
    },
    "2389": {
      "op": "DUP5"
    },
    "2390": {
      "op": "SUB"
    },
    "2391": {
      "op": "SLT"
    },
    "2392": {
      "op": "ISZERO"
    },
    "2393": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "2396": {
      "op": "JUMPI"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2399": {
      "op": "DUP1"
    },
    "2400": {
      "op": "REVERT"
    },
    "2401": {
      "op": "JUMPDEST"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "MLOAD"
    },
    "2404": {
      "op": "SWAP2"
    },
    "2405": {
      "op": "SWAP1"
    },
    "2406": {
      "op": "POP"
    },
    "2407": {
      "jump": "o",
      "op": "JUMP"
    },
    "2408": {
      "op": "JUMPDEST"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "DUP2"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2416": {
      "op": "DUP3"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2421": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2426": {
      "op": "DUP4"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "DUP5"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x8C0"
    },
    "2432": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "31388e26bbf90c44717e1b3c42123c9a9d9e2786",
  "source": "//SPDX-License-Identifier: Apache\npragma solidity ^0.8.25;\n\nimport {VRFCoordinatorV2Interface} from \"smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\nimport {VRFConsumerBaseV2} from \"smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport {ConfirmedOwner} from \"smartcontractkit/chainlink@2.9.0/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\";\n\ncontract CardManager is VRFConsumerBaseV2, ConfirmedOwner {\n  event RequestSent(uint256 requestId, uint32 numWords);\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords);\n\n    struct RequestStatus {\n        bool fulfilled; // whether the request has been successfully fulfilled\n        bool exists; // whether a requestId exists\n        uint256[] randomWords;\n    }\n    mapping(uint256 => RequestStatus)\n        public s_requests; /* requestId --> requestStatus */\n    VRFCoordinatorV2Interface COORDINATOR;\n\n    // Your subscription ID.\n    uint64 s_subscriptionId;\n\n    // past requests Id.\n    uint256[] public requestIds;\n    uint256 public lastRequestId;\n\n    // The gas lane to use, which specifies the maximum gas price to bump to.\n    // For a list of available gas lanes on each network,\n    // see https://docs.chain.link/docs/vrf/v2/subscription/supported-networks/#configurations\n    bytes32 keyHash =\n        0x474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c;\n\n    // Depends on the number of requested values that you want sent to the\n    // fulfillRandomWords() function. Storing each word costs about 20,000 gas,\n    // so 100,000 is a safe default for this example contract. Test and adjust\n    // this limit based on the network that you select, the size of the request,\n    // and the processing of the callback request in the fulfillRandomWords()\n    // function.\n    uint32 callbackGasLimit = 100000;\n\n    // The default is 3, but you can set this higher.\n    uint16 requestConfirmations = 3;\n\n    // For this example, retrieve 2 random values in one request.\n    // Cannot exceed VRFCoordinatorV2.MAX_NUM_WORDS.\n    uint32 numWords = 5;\n\n    /**\n     * HARDCODED FOR SEPOLIA\n     * COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625\n     */\n    constructor(\n        uint64 subscriptionId\n    )\n        VRFConsumerBaseV2(0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625)\n        ConfirmedOwner(msg.sender)\n    {\n        COORDINATOR = VRFCoordinatorV2Interface(\n            0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625\n        );\n        s_subscriptionId = subscriptionId;\n    }\n\n    // Assumes the subscription is funded sufficiently.\n    function requestRandomWords()\n        external\n        onlyOwner\n        returns (uint256 requestId)\n    {\n        // Will revert if subscription is not set and funded.\n        requestId = COORDINATOR.requestRandomWords(\n            keyHash,\n            s_subscriptionId,\n            requestConfirmations,\n            callbackGasLimit,\n            numWords\n        );\n        s_requests[requestId] = RequestStatus({\n            randomWords: new uint256[](0),\n            exists: true,\n            fulfilled: false\n        });\n        requestIds.push(requestId);\n        lastRequestId = requestId;\n        emit RequestSent(requestId, numWords);\n        return requestId;\n    }\n\n    function fulfillRandomWords(\n        uint256 _requestId,\n        uint256[] memory _randomWords\n    ) internal override {\n        require(s_requests[_requestId].exists, \"request not found\");\n        s_requests[_requestId].fulfilled = true;\n        s_requests[_requestId].randomWords = _randomWords;\n        emit RequestFulfilled(_requestId, _randomWords);\n    }\n\n    function getRequestStatus(\n        uint256 _requestId\n    ) external view returns (bool fulfilled, uint256[] memory randomWords) {\n        require(s_requests[_requestId].exists, \"request not found\");\n        RequestStatus memory request = s_requests[_requestId];\n        return (request.fulfilled, request.randomWords);\n    }\n}\n",
  "sourceMap": "431:3564:5:-:0;;;1369:66;1343:92;;1852:32;;;-1:-1:-1;;;;;;2102:19:5;;;;;2236:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2311:42;5683:32:3;;2378:10:5;;373:1:0;2378:10:5;586:59:1;;;;-1:-1:-1;;;586:59:1;;509:2:6;586:59:1;;;491:21:6;548:2;528:18;;;521:30;587:26;567:18;;;560:54;631:18;;586:59:1;;;;;;;;;652:7;:18;;-1:-1:-1;;;;;;652:18:1;-1:-1:-1;;;;;652:18:1;;;;;;;;;;680:26;;;676:79;;716:32;735:12;716:18;:32::i;:::-;-1:-1:-1;;2404:11:5::2;:105:::0;;-1:-1:-1;;;;;2519:33:5;;::::2;-1:-1:-1::0;;;2519:33:5::2;-1:-1:-1::0;;;;;;2519:33:5;;;;;;;2457:42:::2;2519:33:::0;;;;-1:-1:-1;431:3564:5;;1528:235:1;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;862:2:6;1629:52:1;;;844:21:6;901:2;881:18;;;874:30;940:25;920:18;;;913:53;983:18;;1629:52:1;660:347:6;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;14:288:6:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;178:16;;-1:-1:-1;;;;;223:30:6;;213:41;;203:69;;268:1;265;258:12;203:69;291:5;14:288;-1:-1:-1;;;14:288:6:o;660:347::-;431:3564:5;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/CardManager.sol",
  "type": "contract"
}